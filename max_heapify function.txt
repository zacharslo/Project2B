//Max_heapify 

max_heapify(A, index){
	l = left(index);
	r = right(index);

	if(l <= A.heap.size && A[l] > A[index])
		largest = l;
		else
			largest = i;
			if(r < A.heap.size && A[r] > A[largest])
				largest = r;
			if(largest != index){
				swap(A[i].A[largest]);
				max_heapify(A.largest);
			}
}